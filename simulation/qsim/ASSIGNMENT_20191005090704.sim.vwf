/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2018  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("INPUT1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("INPUT1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT1";
}

SIGNAL("INPUT1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT1";
}

SIGNAL("INPUT1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT1";
}

SIGNAL("INPUT1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT1";
}

SIGNAL("INPUT2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("INPUT2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT2";
}

SIGNAL("INPUT2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT2";
}

SIGNAL("OA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OA[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OA";
}

SIGNAL("OA[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OA";
}

SIGNAL("OA[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OA";
}

SIGNAL("OA[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OA";
}

SIGNAL("OB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OB[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OB";
}

SIGNAL("OB[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OB";
}

SIGNAL("OB[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OB";
}

SIGNAL("OB[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OB";
}

SIGNAL("OC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OC[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OC";
}

SIGNAL("OC[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OC";
}

SIGNAL("OC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OC";
}

SIGNAL("OC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OC";
}

SIGNAL("OUTPUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUTPUT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTPUT";
}

SIGNAL("OUTPUT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTPUT";
}

SIGNAL("OUTPUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTPUT";
}

SIGNAL("OUTPUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTPUT";
}

SIGNAL("S")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("S[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "S";
}

SIGNAL("S[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "S";
}

SIGNAL("S[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "S";
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("INPUT1[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 48.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 84.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 96.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 4.0;
		}
	}
}

TRANSITION_LIST("INPUT1[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 48.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 48.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 96.0;
			LEVEL 0 FOR 28.0;
		}
	}
}

TRANSITION_LIST("INPUT1[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 48.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 48.0;
			LEVEL 0 FOR 84.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 72.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 4.0;
		}
	}
}

TRANSITION_LIST("INPUT1[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 48.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 72.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 72.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 48.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 16.0;
		}
	}
}

TRANSITION_LIST("INPUT2[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 17.0;
			LEVEL 1 FOR 17.0;
			LEVEL 0 FOR 34.0;
			LEVEL 1 FOR 34.0;
			LEVEL 0 FOR 17.0;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 34.0;
			LEVEL 1 FOR 17.0;
			LEVEL 0 FOR 17.0;
			LEVEL 1 FOR 17.0;
			LEVEL 0 FOR 17.0;
			LEVEL 1 FOR 17.0;
			LEVEL 0 FOR 17.0;
			LEVEL 1 FOR 17.0;
			LEVEL 0 FOR 51.0;
			LEVEL 1 FOR 17.0;
			LEVEL 0 FOR 17.0;
			LEVEL 1 FOR 34.0;
			LEVEL 0 FOR 34.0;
			LEVEL 1 FOR 68.0;
			LEVEL 0 FOR 17.0;
			LEVEL 1 FOR 34.0;
			LEVEL 0 FOR 17.0;
			LEVEL 1 FOR 34.0;
			LEVEL 0 FOR 17.0;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 34.0;
			LEVEL 1 FOR 34.0;
			LEVEL 0 FOR 34.0;
			LEVEL 1 FOR 34.0;
			LEVEL 0 FOR 17.0;
			LEVEL 1 FOR 17.0;
			LEVEL 0 FOR 17.0;
			LEVEL 1 FOR 31.0;
		}
	}
}

TRANSITION_LIST("INPUT2[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 17.0;
			LEVEL 1 FOR 17.0;
			LEVEL 0 FOR 34.0;
			LEVEL 1 FOR 17.0;
			LEVEL 0 FOR 17.0;
			LEVEL 1 FOR 34.0;
			LEVEL 0 FOR 68.0;
			LEVEL 1 FOR 51.0;
			LEVEL 0 FOR 51.0;
			LEVEL 1 FOR 17.0;
			LEVEL 0 FOR 17.0;
			LEVEL 1 FOR 34.0;
			LEVEL 0 FOR 68.0;
			LEVEL 1 FOR 17.0;
			LEVEL 0 FOR 17.0;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 17.0;
			LEVEL 1 FOR 119.0;
			LEVEL 0 FOR 119.0;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 17.0;
			LEVEL 1 FOR 51.0;
			LEVEL 0 FOR 17.0;
			LEVEL 1 FOR 14.0;
		}
	}
}

TRANSITION_LIST("OA[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 45.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 210.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 410.0;
			LEVEL 1 FOR 215.0;
		}
	}
}

TRANSITION_LIST("OA[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 45.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 90.0;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 215.0;
		}
	}
}

TRANSITION_LIST("OA[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 45.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 270.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 215.0;
		}
	}
}

TRANSITION_LIST("OA[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 295.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 450.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 205.0;
		}
	}
}

TRANSITION_LIST("OB[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 105.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 90.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 210.0;
			LEVEL 1 FOR 170.0;
			LEVEL 0 FOR 90.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 35.0;
		}
	}
}

TRANSITION_LIST("OB[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 105.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 220.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 90.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 170.0;
			LEVEL 0 FOR 90.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 35.0;
		}
	}
}

TRANSITION_LIST("OB[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 115.0;
			LEVEL 1 FOR 110.0;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 330.0;
			LEVEL 0 FOR 305.0;
		}
	}
}

TRANSITION_LIST("OB[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 105.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 170.0;
			LEVEL 0 FOR 135.0;
		}
	}
}

TRANSITION_LIST("OC[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 275.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 130.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 290.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 130.0;
			LEVEL 1 FOR 70.0;
			LEVEL 0 FOR 25.0;
		}
	}
}

TRANSITION_LIST("OC[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 165.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 90.0;
			LEVEL 1 FOR 140.0;
			LEVEL 0 FOR 290.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 130.0;
			LEVEL 1 FOR 70.0;
			LEVEL 0 FOR 25.0;
		}
	}
}

TRANSITION_LIST("OC[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 195.0;
			LEVEL 1 FOR 90.0;
			LEVEL 0 FOR 130.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 340.0;
			LEVEL 1 FOR 95.0;
		}
	}
}

TRANSITION_LIST("OC[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 195.0;
			LEVEL 1 FOR 230.0;
			LEVEL 0 FOR 290.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 220.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 15.0;
		}
	}
}

TRANSITION_LIST("OUTPUT[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 26.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 57.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 35.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 22.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 41.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 48.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 49.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 84.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 22.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 32.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 13.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 34.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 27.0;
		}
	}
}

TRANSITION_LIST("OUTPUT[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 26.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 9.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 9.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 45.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 34.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 13.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 32.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 13.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 34.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 27.0;
		}
	}
}

TRANSITION_LIST("OUTPUT[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 63.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 35.0;
			LEVEL 1 FOR 35.0;
			LEVEL 0 FOR 49.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 32.0;
			LEVEL 1 FOR 27.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 29.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 13.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 11.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 13.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 54.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 13.0;
		}
	}
}

TRANSITION_LIST("OUTPUT[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 48.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 38.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 35.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 9.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 9.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 56.0;
			LEVEL 1 FOR 34.0;
			LEVEL 0 FOR 29.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 26.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 27.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 27.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 17.0;
			LEVEL 0 FOR 54.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 13.0;
		}
	}
}

TRANSITION_LIST("S[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 35.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 35.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 13.0;
		}
	}
}

TRANSITION_LIST("S[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 49.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 49.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 42.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 13.0;
		}
	}
}

TRANSITION_LIST("S[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 35.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 35.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 35.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 63.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 6.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "OA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12, 13;
}

DISPLAY_LINE
{
	CHANNEL = "OA[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "OA[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "OA[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "OA[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "OB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "OB[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "OB[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "OB[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "OB[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "OC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
	CHILDREN = 20, 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "OC[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "OC[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "OC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "OC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
	CHILDREN = 25, 26, 27, 28;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "S";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
	CHILDREN = 30, 31, 32;
}

DISPLAY_LINE
{
	CHANNEL = "S[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "S[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "S[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 29;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
